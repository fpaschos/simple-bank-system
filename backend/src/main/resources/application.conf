application {
  // TODO
}


akka {
  # Log the complete configuration at INFO level when the actor system is started.
  # This is useful when you are uncertain of what configuration is used.
  log-config-on-start = off

  stdout-loglevel = "OFF"

  loglevel = "DEBUG"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"


  log-dead-letters = on
  log-dead-letters-during-shutdown = off

  coordinated-shutdown.run-by-jvm-shutdown-hook = on //this is the default value

  // Configure serialization
  actor {
    serialization-bindings {
      "gr.fpas.bank.be.CborSerialized" = jackson-cbor
    }
  }

  serialization.jackson.jackson-cbor {
    serialization-features {
      WRITE_DATES_AS_TIMESTAMPS = on
      WRITE_DURATIONS_AS_TIMESTAMPS = on
    }
  }

  // Configure jdbc persistence plugins
  persistence {
    journal.plugin = "jdbc-journal"
    snapshot-store.plugin = "jdbc-snapshot-store"
  }


}

jdbc-journal {
  slick = ${slick}
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  slick = ${slick}
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  slick = ${slick}
}

# general slick configuration
slick {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    url = "jdbc:postgresql://localhost:54321/docker"
    user = "docker"
    password = "docker"
    driver = "org.postgresql.Driver"

    // hikariCP
    numThreads = 5 // number of cores
    maxConnections = 5 // 2 * numThreads + 1 (if running on an SSD)
    minConnections = 1  // same as numThreads

    connectionTestQuery = SELECT 1 // postgres doesnt support connection timeout
  }
}



